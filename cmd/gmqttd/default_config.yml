# Path to pid file.
# If not set, there will be no pid file.
# pid_file: /var/run/gmqttd.pid

listeners:
  # bind address
  - address: ":1883"
#    tls:
#      cacert: "path_to_ca_cert_file"
#      cert: "path_to_cert_file"
#      key: "path_to_key_file"

  - address: ":8883"
    # websocket setting
    websocket:
      path: "/"

api:
  grpc:
    # The gRPC server listen address. Supports unix socket and tcp socket.
    - address: "tcp://127.0.0.1:8084"
    #- address: "unix:///var/run/gmqttd.sock"
#      tls:
#        cacert: "path_to_ca_cert_file"
#        cert: "path_to_cert_file"
#        key: "path_to_key_file"
  http:
      # The HTTP server listen address. This is a reverse-proxy server in front of gRPC server.
    - address: "tcp://127.0.0.1:8083"
      map: "tcp://127.0.0.1:8084" # The backend gRPC server endpoint,
#      tls:
#        cacert: "path_to_ca_cert_file"
#        cert: "path_to_cert_file"
#        key: "path_to_key_file"

mqtt:
  session_expiry: 2h
  session_expiry_check_timer: 20s
  message_expiry: 2h
  inflight_expiry: 30s
  max_packet_size: 268435456
  server_receive_maximum: 100
  max_keepalive: 60
  topic_alias_maximum: 10
  subscription_identifier_available: true
  wildcard_subscription_available: true
  shared_subscription_available: true
  maximum_qos: 2
  retain_available: true
  max_queued_messages: 1000
  max_inflight: 100
  queue_qos0_messages: true
  delivery_mode: onlyonce # overlap or onlyonce
  allow_zero_length_clientid: true

persistence:
  type: memory  # memory | redis
  # The redis configuration only take effect when type == redis.
  redis:
    # redis server address
    addr: "127.0.0.1:6379"
    # the maximum number of idle connections in the redis connection pool.
    max_idle: 1000
    # the maximum number of connections allocated by the redis connection pool at a given time.
    # If zero, there is no limit on the number of connections in the pool.
    max_active: 0
    # the connection idle timeout, connection will be closed after remaining idle for this duration. If the value is zero, then idle connections are not closed.
    idle_timeout: 240s
    password: ""
    # the number of the redis database.
    database: 0

# The topic alias manager setting. The topic alias feature is introduced by MQTT V5.
# This setting is used to control how the broker manage topic alias.
topic_alias_manager:
  # Currently, only FIFO strategy is supported.
  type: fifo

plugins:
  prometheus:
    path: "/metrics"
    listen_address: ":8082"
  auth:
    # Password hash type. (plain | md5 | sha256 | bcrypt)
    # Default to MD5.
    hash: md5
    # The file to store password. If it is a relative path, it locates in the same directory as the config file.
    # (e.g: ./gmqtt_password => /etc/gmqtt/gmqtt_password.yml)
    # Defaults to ./gmqtt_password.yml
    # password_file:
  federation:
    # node_name is the unique identifier for the node in the federation. Defaults to hostname.
    # node_name:
    # fed_addr is the gRPC server listening address for the federation internal communication. Defaults to :8901
    fed_addr: :8901
    # advertise_fed_addr is used to change the federation gRPC server address that we advertise to other nodes in the cluster.
    # Defaults to "fed_addr".However, in some cases, there may be a routable address that cannot be bound.
    # If the port is missing, the default federation port (8901) will be used.
    advertise_fed_addr: :8901
    # gossip_addr is the address that the gossip will listen on, It is used for both UDP and TCP gossip. Defaults to :8902
    gossip_addr: :8902
    # advertise_gossip_addr is used to change the gossip server address that we advertise to other nodes in the cluster.
    # Defaults to "GossipAddr" or the private IP address of the node if the IP in "GossipAddr" is 0.0.0.0.
    # If the port is missing, the default gossip port (8902) will be used.
    advertise_gossip_addr: :8902

    # retry_join is the address of other nodes to join upon starting up.
    # If port is missing, the default gossip port (8902) will be used.
    #retry_join:
    #  - 127.0.0.1:8902

    # rejoin_after_leave will be pass to "RejoinAfterLeave" in serf configuration.
    # It controls our interaction with the snapshot file.
    # When set to false (default), a leave causes a Serf to not rejoin the cluster until an explicit join is received.
    # If this is set to true, we ignore the leave, and rejoin the cluster on start.
    rejoin_after_leave: false
    # snapshot_path will be pass to "SnapshotPath" in serf configuration.
    # When Serf is started with a snapshot,it will attempt to join all the previously known nodes until one
    # succeeds and will also avoid replaying old user events.
    snapshot_path:

# plugin loading orders
plugin_order:
  # Uncomment auth to enable authentication.
  # - auth
  - prometheus
  - admin
  - federation
log:
  level: info # debug | info | warn | error
  format: text # json | text
  # whether to dump MQTT packet in debug level
  dump_packet: false




